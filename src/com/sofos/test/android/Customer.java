/**
 * Generated by Sybase AFX Compiler with templateJ
 * Compiler version - 2.3.2.380
 * mbs - false 
 */
package com.sofos.test.android;

@SuppressWarnings("all")
public  class Customer extends com.sybase.persistence.AbstractReadOnlyEntity implements com.sybase.persistence.BusinessObject, com.sybase.reflection.ClassWithMetaData
{
    /** Begin code region: MetaData **/
    private static com.sofos.test.android.intrnl.CustomerMetaData META_DATA = new com.sofos.test.android.intrnl.CustomerMetaData();
    
    /**
     * return MetaData object  
     */
    public com.sybase.reflection.ClassMetaData getClassMetaData()
    {
        return META_DATA;
    }
    
    /**
     * return MetaData object  
     */
    public static com.sybase.reflection.EntityMetaData getMetaData()
    {
        return META_DATA;
    }
    
    /** End code region: MetaData **/
    protected static com.sybase.sup.client.persistence.EntityDelegate DELEGATE = 
        com.sybase.sup.client.persistence.DelegateFactory.createEntityDelegate("Customer", com.sofos.test.android.Customer.class, "AndroidMobileAppTest.Customer", META_DATA, com.sofos.test.android.AndroidMobileAppTestDB.getDelegate());
    
    
    /** Begin code region: Properties **/
    private java.lang.String __ID ;  
    
    private java.lang.String __FNAME ;  
    
    private java.lang.String __LNAME ;  
    
    private java.lang.String __ADDRESS ;  
    
    private java.lang.String __CITY ;  
    
    private java.lang.String __STATE ;  
    
    private java.lang.String __ZIP ;  
    
    private java.lang.String __PHONE ;  
    
    private java.lang.String __COMPANY_NAME ;  
    
    private long __surrogateKey ;  
    
    public long getAttributeLong(int id)
    {
        switch(id)
        {
        case 62:
            return getSurrogateKey();
        default:
            return super.getAttributeLong(id);
        }
    }
    
    public void setAttributeLong(int id, long v)
    {
        switch(id)
        {
        case 62:
            setSurrogateKey((long)v);
            break;
        default:
            super.setAttributeLong(id, v);
            break;
        }
    }
    public java.lang.String getAttributeString(int id)
    {
        switch(id)
        {
        case 53:
            return getID();
        case 54:
            return getFNAME();
        case 55:
            return getLNAME();
        case 56:
            return getADDRESS();
        case 57:
            return getCITY();
        case 58:
            return getSTATE();
        case 59:
            return getZIP();
        case 60:
            return getPHONE();
        case 61:
            return getCOMPANY_NAME();
        default:
            return super.getAttributeString(id);
        }
    }
    
    public void setAttributeString(int id, java.lang.String v)
    {
        switch(id)
        {
        case 53:
            setID((java.lang.String)v);
            break;
        case 54:
            setFNAME((java.lang.String)v);
            break;
        case 55:
            setLNAME((java.lang.String)v);
            break;
        case 56:
            setADDRESS((java.lang.String)v);
            break;
        case 57:
            setCITY((java.lang.String)v);
            break;
        case 58:
            setSTATE((java.lang.String)v);
            break;
        case 59:
            setZIP((java.lang.String)v);
            break;
        case 60:
            setPHONE((java.lang.String)v);
            break;
        case 61:
            setCOMPANY_NAME((java.lang.String)v);
            break;
        default:
            super.setAttributeString(id, v);
            break;
        }
    }
    
    public Object getAttributeJson(int id)
    {
        switch(id)
        {
        default:
            return super.getAttributeJson(id);
        }
    }
    
    public void setAttributeJson(int id, Object value)
    {
        switch(id)
        {
        default:
            super.setAttributeJson(id, value);
            break;
        }
    }
    /** End code region: Properties **/
    
    /** Begin code region: Constructor and init **/
    /**
     * Creates an instance of com.sofos.test.android.Customer  
     */
    public Customer()
    {
        setEntityDelegate(DELEGATE);
        _init();
    }
    protected void _init()
    {
        
    }
    /** End code region: Constructor and init **/
    
    /**
     * Get the value of ID  
     */
    public java.lang.String getID()
    {
        
        return __ID;
    }
    /**
     * Set the value of ID  
     */
    public void setID(java.lang.String value)
    {
        if ((__ID == null) != (value == null) || (value != null && ! value.equals(__ID)))
        {
            _isDirty = true;
        }
        __ID = value;
    }       
    /**
     * Get the value of FNAME  
     */
    public java.lang.String getFNAME()
    {
        
        return __FNAME;
    }
    /**
     * Set the value of FNAME  
     */
    public void setFNAME(java.lang.String value)
    {
        if ((__FNAME == null) != (value == null) || (value != null && ! value.equals(__FNAME)))
        {
            _isDirty = true;
        }
        __FNAME = value;
    }       
    /**
     * Get the value of LNAME  
     */
    public java.lang.String getLNAME()
    {
        
        return __LNAME;
    }
    /**
     * Set the value of LNAME  
     */
    public void setLNAME(java.lang.String value)
    {
        if ((__LNAME == null) != (value == null) || (value != null && ! value.equals(__LNAME)))
        {
            _isDirty = true;
        }
        __LNAME = value;
    }       
    /**
     * Get the value of ADDRESS  
     */
    public java.lang.String getADDRESS()
    {
        
        return __ADDRESS;
    }
    /**
     * Set the value of ADDRESS  
     */
    public void setADDRESS(java.lang.String value)
    {
        if ((__ADDRESS == null) != (value == null) || (value != null && ! value.equals(__ADDRESS)))
        {
            _isDirty = true;
        }
        __ADDRESS = value;
    }       
    /**
     * Get the value of CITY  
     */
    public java.lang.String getCITY()
    {
        
        return __CITY;
    }
    /**
     * Set the value of CITY  
     */
    public void setCITY(java.lang.String value)
    {
        if ((__CITY == null) != (value == null) || (value != null && ! value.equals(__CITY)))
        {
            _isDirty = true;
        }
        __CITY = value;
    }       
    /**
     * Get the value of STATE  
     */
    public java.lang.String getSTATE()
    {
        
        return __STATE;
    }
    /**
     * Set the value of STATE  
     */
    public void setSTATE(java.lang.String value)
    {
        if ((__STATE == null) != (value == null) || (value != null && ! value.equals(__STATE)))
        {
            _isDirty = true;
        }
        __STATE = value;
    }       
    /**
     * Get the value of ZIP  
     */
    public java.lang.String getZIP()
    {
        
        return __ZIP;
    }
    /**
     * Set the value of ZIP  
     */
    public void setZIP(java.lang.String value)
    {
        if ((__ZIP == null) != (value == null) || (value != null && ! value.equals(__ZIP)))
        {
            _isDirty = true;
        }
        __ZIP = value;
    }       
    /**
     * Get the value of PHONE  
     */
    public java.lang.String getPHONE()
    {
        
        return __PHONE;
    }
    /**
     * Set the value of PHONE  
     */
    public void setPHONE(java.lang.String value)
    {
        if ((__PHONE == null) != (value == null) || (value != null && ! value.equals(__PHONE)))
        {
            _isDirty = true;
        }
        __PHONE = value;
    }       
    /**
     * Get the value of COMPANY_NAME  
     */
    public java.lang.String getCOMPANY_NAME()
    {
        
        return __COMPANY_NAME;
    }
    /**
     * Set the value of COMPANY_NAME  
     */
    public void setCOMPANY_NAME(java.lang.String value)
    {
        if ((__COMPANY_NAME == null) != (value == null) || (value != null && ! value.equals(__COMPANY_NAME)))
        {
            _isDirty = true;
        }
        __COMPANY_NAME = value;
    }       
    /**
     * Get the value of surrogateKey  
     */
    public long getSurrogateKey()
    {
        
        return __surrogateKey;
    }
    /**
     * Set the value of surrogateKey  
     */
    public void setSurrogateKey(long value)
    {
        if(__surrogateKey != value)
        {
            _isDirty = true;
        }
        __surrogateKey = value;
    }
    
    /**
     * Search mobile business object using surrogateKey
     * @param id surrogateKey
     * @return mobile business object
     */
    public static com.sofos.test.android.Customer find(long id)
    {
        String intervalName = null;
        if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
        {
            intervalName = "Customer.find()";
            com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().startInterval(intervalName, com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.PersistenceRead);
        }
        try
        {
            Object[] keys = new Object[]{id};
            return (com.sofos.test.android.Customer)(DELEGATE.findEntityWithKeys(keys));
        }
        finally
        {
            if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
            {
                com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().stopInterval(intervalName);
            }
        }
    }
    
    /**
     * Get the mobile business object by surrogate key.
     * @param id surrogate key
     * @return the mobile business object for the surroget key
     * @exception ObjectNotFoundException Thrown if unable to retrieve mobile business object.
     */
    public static com.sofos.test.android.Customer load(long id)
    {
        return (com.sofos.test.android.Customer)(DELEGATE.load(id));
    }
    
    /**
     * Get surroget key of the mobile business object  
     */
    public java.lang.Long _pk()
    {
        return (java.lang.Long)i_pk();
    }
    
    /** Begin code region: Finder methods **/
    /**
     * return MBO count filter by query object  
     */
    public static int getSize(com.sybase.persistence.Query query)
    {
        return DELEGATE.getSize(query);
    }
    
    /**
     * Find a List of Customer
     * @param query The query to be filter.
     * @exception PersistenceException Thrown if unable to retrieve mobile business object.
     */
    public static com.sybase.collections.GenericList<com.sofos.test.android.Customer> findWithQuery(com.sybase.persistence.Query query)
    {
        return (com.sybase.collections.GenericList<com.sofos.test.android.Customer>)(Object)DELEGATE.findWithQuery(query, com.sofos.test.android.Customer.class);
    }
    
    /**
     * Find a List of Com.sofos.test.android.Customer
     * @exception PersistentException Thrown if unable to retrieve mobile business object.
     */
    public static com.sybase.collections.GenericList<com.sofos.test.android.Customer> findAll(int skip, int take)
    {
        String intervalName = null;
        if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
        {
            intervalName = "Customer.findAll";
            com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().startInterval(intervalName, com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.PersistenceRead);
        }
        try
        {
    
            
                String _selectSQL = " x.\"a\",x.\"b\",x.\"c\",x.\"d\",x.\"e\",x.\"f\",x.\"g\",x.\"h\",x.\"i\",x.\"j\" FROM \"androidmobileapptest_1_0_customer\" x";
                _selectSQL = "select " + _selectSQL;
                String[] ids = new String[0];
                com.sybase.reflection.DataType[] dts = new com.sybase.reflection.DataType[]{    
                };
                Object[] values = new Object[] { 
                };
                com.sybase.collections.GenericList<Object> res = DELEGATE.findWithSQL(_selectSQL, dts, values, ids, skip, take, com.sofos.test.android.Customer.class);
                return (com.sybase.collections.GenericList<com.sofos.test.android.Customer>)(Object)res;
        }
        finally
        {
            if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
            {
                com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().stopInterval(intervalName);
            }
        }
    }
    /**
     * Find a list of com.sofos.test.android.Customer  
     */
    public static com.sybase.collections.GenericList<com.sofos.test.android.Customer> findAll()
    {
        return findAll(0, Integer.MAX_VALUE);
    }
    /**
     * Find a mobile business object Com.sofos.test.android.Customer
     * @exception PersistentException Thrown if unable to retrieve mobile business object.
     */
    public static com.sofos.test.android.Customer findByPrimaryKey(java.lang.String ID)
    {
        String intervalName = null;
        if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
        {
            intervalName = "Customer.findByPrimaryKey";
            com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().startInterval(intervalName, com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.PersistenceRead);
        }
        try
        {
    
            
                String _selectSQL = "SELECT x.\"a\",x.\"b\",x.\"c\",x.\"d\",x.\"e\",x.\"f\",x.\"g\",x.\"h\",x.\"i\",x.\"j\" FROM \"androidmobileapptest_1_0_customer\" x WHERE x.\"a\" = ?";
                String[] ids = new String[0];
                com.sybase.reflection.DataType[] dts = new com.sybase.reflection.DataType[]{    
                    com.sybase.reflection.DataType.forName("string"),
                };
                Object[] values = new Object[] { 
                    ID,
                };
                Object res = DELEGATE.findWithSQL(_selectSQL, dts, values, ids, com.sofos.test.android.Customer.class);
                return (com.sofos.test.android.Customer)res;
        }
        finally
        {
            if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
            {
                com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().stopInterval(intervalName);
            }
        }
    }
    
    /**
     * Returns the MBOs that are updated locally but not submitted.  
     */
    public static com.sybase.collections.GenericList<com.sofos.test.android.Customer> getPendingObjects(int skip, int take)
    {
        return (com.sybase.collections.GenericList<com.sofos.test.android.Customer>)(Object)DELEGATE.getPendingObjects(skip, take);
    }
    /**
     * Returns the MBOs that are updated locally but not submmited.  
     */
    public static com.sybase.collections.GenericList<com.sofos.test.android.Customer> getPendingObjects()
    {
        return (com.sybase.collections.GenericList<com.sofos.test.android.Customer>)(Object)DELEGATE.getPendingObjects();
    }
    
    /** End code region: Finder methods **/
    
    public com.sybase.collections.GenericList<com.sybase.persistence.LogRecord> getLogRecords()
    {
        return com.sofos.test.android.LogRecordImpl.findByEntity("Customer", keyToString());
    }
    
    
    
    
    
    public void create()
    {
        throw new com.sybase.persistence.NoSuchOperationException(com.sybase.persistence.NoSuchOperationException.NO_SUCH_OPERATION);
    }
    public void update()
    {
        throw new com.sybase.persistence.NoSuchOperationException(com.sybase.persistence.NoSuchOperationException.NO_SUCH_OPERATION);
    }      
    public void delete()
    {
        throw new com.sybase.persistence.NoSuchOperationException(com.sybase.persistence.NoSuchOperationException.NO_SUCH_OPERATION);
    }
    
    
    
    
    /**
     * Install a callback handler
     */
    public static void registerCallbackHandler(com.sybase.persistence.CallbackHandler handler)
    {
        DELEGATE.registerCallbackHandler(handler);
    }
    
    public static com.sybase.persistence.CallbackHandler getCallbackHandler()
    {
        return DELEGATE.getCallbackHandler();
    }
}