/**
 * Generated by Sybase AFX Compiler with templateJ
 * Compiler version - 2.3.2.380
 * mbs - false 
 */
package com.sofos.test.android;

@SuppressWarnings("all")
public  class ChangeLogImpl extends com.sybase.persistence.AbstractEntity implements com.sybase.persistence.ChangeLog, com.sybase.persistence.BusinessObject, com.sybase.reflection.ClassWithMetaData
{
    /** Begin code region: MetaData **/
    private static com.sofos.test.android.intrnl.ChangeLogImplMetaData META_DATA = new com.sofos.test.android.intrnl.ChangeLogImplMetaData();
    
    /**
     * return MetaData object  
     */
    public com.sybase.reflection.ClassMetaData getClassMetaData()
    {
        return META_DATA;
    }
    
    /**
     * return MetaData object  
     */
    public static com.sybase.reflection.EntityMetaData getMetaData()
    {
        return META_DATA;
    }
    
    /** End code region: MetaData **/
    protected static com.sybase.sup.client.persistence.EntityDelegate DELEGATE = 
        com.sybase.sup.client.persistence.DelegateFactory.createEntityDelegate("ChangeLogImpl", com.sofos.test.android.ChangeLogImpl.class, "AndroidMobileAppTest.ChangeLogImpl", META_DATA, com.sofos.test.android.AndroidMobileAppTestDB.getDelegate());
    
    
    /** Begin code region: Properties **/
    private char __operationType ;  
    
    private int __rootEntityType ;  
    
    private long __rootSurrogateKey ;  
    
    private int __entityType ;  
    
    private long __surrogateKey ;  
    
    public long getAttributeLong(int id)
    {
        switch(id)
        {
        case 237:
            return getRootSurrogateKey();
        case 234:
            return getSurrogateKey();
        default:
            return super.getAttributeLong(id);
        }
    }
    
    public void setAttributeLong(int id, long v)
    {
        switch(id)
        {
        case 237:
            setRootSurrogateKey((long)v);
            break;
        case 234:
            setSurrogateKey((long)v);
            break;
        default:
            super.setAttributeLong(id, v);
            break;
        }
    }
    public char getAttributeChar(int id)
    {
        switch(id)
        {
        case 235:
            return getOperationType();
        default:
            return super.getAttributeChar(id);
        }
    }
    
    public void setAttributeChar(int id, char v)
    {
        switch(id)
        {
        case 235:
            setOperationType((char)v);
            break;
        default:
            super.setAttributeChar(id, v);
            break;
        }
    }
    public int getAttributeInt(int id)
    {
        switch(id)
        {
        case 236:
            return getRootEntityType();
        case 233:
            return getEntityType();
        default:
            return super.getAttributeInt(id);
        }
    }
    
    public void setAttributeInt(int id, int v)
    {
        switch(id)
        {
        case 236:
            setRootEntityType((int)v);
            break;
        case 233:
            setEntityType((int)v);
            break;
        default:
            super.setAttributeInt(id, v);
            break;
        }
    }
    
    public Object getAttributeJson(int id)
    {
        switch(id)
        {
        default:
            return super.getAttributeJson(id);
        }
    }
    
    public void setAttributeJson(int id, Object value)
    {
        switch(id)
        {
        default:
            super.setAttributeJson(id, value);
            break;
        }
    }
    /** End code region: Properties **/
    
    /** Begin code region: Constructor and init **/
    /**
     * Creates an instance of com.sofos.test.android.ChangeLogImpl  
     */
    public ChangeLogImpl()
    {
        setEntityDelegate(DELEGATE);
        _init();
    }
    protected void _init()
    {
        
    }
    /** End code region: Constructor and init **/
    
    /**
     * Get the value of operationType  
     */
    public char getOperationType()
    {
        
        return __operationType;
    }
    /**
     * Set the value of operationType  
     */
    public void setOperationType(char value)
    {
        if(__operationType != value)
        {
            _isDirty = true;
        }
        __operationType = value;
    }       
    /**
     * Get the value of rootEntityType  
     */
    public int getRootEntityType()
    {
        
        return __rootEntityType;
    }
    /**
     * Set the value of rootEntityType  
     */
    public void setRootEntityType(int value)
    {
        if(__rootEntityType != value)
        {
            _isDirty = true;
        }
        __rootEntityType = value;
    }       
    /**
     * Get the value of rootSurrogateKey  
     */
    public long getRootSurrogateKey()
    {
        
        return __rootSurrogateKey;
    }
    /**
     * Set the value of rootSurrogateKey  
     */
    public void setRootSurrogateKey(long value)
    {
        if(__rootSurrogateKey != value)
        {
            _isDirty = true;
        }
        __rootSurrogateKey = value;
    }       
    /**
     * Get the value of entityType  
     */
    public int getEntityType()
    {
        
        return __entityType;
    }
    /**
     * Set the value of entityType  
     */
    public void setEntityType(int value)
    {
        if(__entityType != value)
        {
            _isDirty = true;
        }
        __entityType = value;
    }       
    /**
     * Get the value of surrogateKey  
     */
    public long getSurrogateKey()
    {
        
        return __surrogateKey;
    }
    /**
     * Set the value of surrogateKey  
     */
    public void setSurrogateKey(long value)
    {
        if(__surrogateKey != value)
        {
            _isDirty = true;
        }
        __surrogateKey = value;
    }
    
    /**
     * Search mobile business object using surrogateKey
     * @param id surrogateKey
     * @return mobile business object
     */
    public static com.sofos.test.android.ChangeLogImpl find(com.sofos.test.android.ChangeLogKey id)
    {
        String intervalName = null;
        if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
        {
            intervalName = "ChangeLogImpl.find()";
            com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().startInterval(intervalName, com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.PersistenceRead);
        }
        try
        {
            Object[] keys = new Object[]{id.getEntityType(),id.getSurrogateKey()};
            return (com.sofos.test.android.ChangeLogImpl)(DELEGATE.findEntityWithKeys(keys));
        }
        finally
        {
            if(com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.isEnabled)
            {
                com.sybase.mobile.util.perf.impl.PerformanceAgentServiceImpl.getInstance().stopInterval(intervalName);
            }
        }
    }
    
    /**
     * Get the mobile business object by surrogate key.
     * @param id surrogate key
     * @return the mobile business object for the surroget key
     * @exception ObjectNotFoundException Thrown if unable to retrieve mobile business object.
     */
    public static com.sofos.test.android.ChangeLogImpl load(com.sofos.test.android.ChangeLogKey id)
    {
        return (com.sofos.test.android.ChangeLogImpl)(DELEGATE.load(id));
    }
    
    /**
     * Get surroget key of the mobile business object  
     */
    public com.sofos.test.android.ChangeLogKey _pk()
    {
        return (com.sofos.test.android.ChangeLogKey)i_pk();
    }
    
    /** Begin code region: Finder methods **/
    /**
     * return MBO count filter by query object  
     */
    public static int getSize(com.sybase.persistence.Query query)
    {
        return DELEGATE.getSize(query);
    }
    
    /**
     * Find a List of ChangeLogImpl
     * @param query The query to be filter.
     * @exception PersistenceException Thrown if unable to retrieve mobile business object.
     */
    public static com.sybase.collections.GenericList<com.sofos.test.android.ChangeLogImpl> findWithQuery(com.sybase.persistence.Query query)
    {
        return (com.sybase.collections.GenericList<com.sofos.test.android.ChangeLogImpl>)(Object)DELEGATE.findWithQuery(query, com.sofos.test.android.ChangeLogImpl.class);
    }
    
    
    
    
    /** End code region: Finder methods **/
    
    
    
    
    
    
    
    /**
     * Delete all the change logs .  
     */
    public static void deleteChangeLogs()
    {
        try
        {
            String sql = "truncate table androidmobileapptest_1_0_changelogimpl";
        	com.sybase.persistence.ConnectionWrapper _conn = com.sofos.test.android.AndroidMobileAppTestDB.acquireDBWriteConnection();
            com.sybase.afx.ulj.StatementUtil.prepareStatement(_conn, sql).execute();
        }
        catch(Exception ex)
        {
            throw new com.sybase.persistence.PersistenceException(com.sybase.persistence.PersistenceException.EXCEPTION_CAUSE, ex);
        }
        finally
        {
            com.sofos.test.android.AndroidMobileAppTestDB.releaseDBConnection();
        }
    }
}